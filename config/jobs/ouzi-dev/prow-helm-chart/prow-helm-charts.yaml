presubmits:
  ouzi-dev/prow-helm-chart:
    # https://github.com/kubernetes/test-infra/blob/master/prow/inrepoconfig.md
    - name: validate-prow-yaml
      always_run: true
      decorate: true
      clone_uri: "git@github.com:ouzi-dev/prow-helm-chart.git"
      trigger: "(?m)validate-prow-yaml( please)?" 
      rerun_command: "validate-prow-yaml"
      extra_refs:
        - org: ouzi-dev
          repo: test-infra
          base_ref: master
      spec:
        containers:
        - image: gcr.io/k8s-prow/checkconfig:v20200220-16f6e7c89
          command:
          - /app/prow/cmd/checkconfig/app.binary
          args:
          - --plugin-config=../test-infra/prow/plugins.yaml
          - --config-path=../test-infra/prow/config.yaml
          - --prow-yaml-repo-name=$(REPO_OWNER)/$(REPO_NAME)
    - name: validate-no-creds
      always_run: true
      decorate: true
      clone_uri: "git@github.com:ouzi-dev/prow-helm-chart.git"
      trigger: "(?m)validate-no-creds( please)?" 
      rerun_command: "validate-no-creds"
      spec:
        containers:
        - image: quay.io/ouzi/git-secret-scanner:0.0.3
          command:
          - git-secrets
          args:
          - --scan
    - name: test-prow-helm-chart-lint
      context: test-prow-helm-chart-lint
      decorate: true
      clone_uri: "git@github.com:ouzi-dev/prow-helm-chart.git" 
      always_run: true 
      skip_report: false 
      max_concurrency: 1 
      trigger: "(?m)lint( please)?" 
      rerun_command: "lint"
      spec: 
        containers:
          - name: "test-prow-helm-chart-lint"
            imagePullPolicy: IfNotPresent
            image: quay.io/ouzi/helm:v3.0.0-beta.5
            command:
              - make
            args:
              - lint
    - name: test-prow-helm-chart-validate
      context: test-prow-helm-chart-validate
      decorate: true
      clone_uri: "git@github.com:ouzi-dev/prow-helm-chart.git" 
      always_run: true 
      skip_report: false 
      max_concurrency: 1 
      trigger: "(?m)validate( please)?" 
      rerun_command: "validate"
      spec: 
        containers:
          - name: "test-prow-helm-chart-validate"
            imagePullPolicy: IfNotPresent
            image: quay.io/ouzi/helm:v3.0.0-beta.5
            command:
              - make
            args:
              - validate
    - name: test-prow-helm-chart-package
      context: test-prow-helm-chart-package
      decorate: true
      clone_uri: "git@github.com:ouzi-dev/prow-helm-chart.git" 
      always_run: true 
      skip_report: false 
      max_concurrency: 1 
      trigger: "(?m)package( please)?" 
      rerun_command: "package"
      spec: 
        containers:
          - name: "test-prow-helm-chart-package"
            imagePullPolicy: IfNotPresent
            image: quay.io/ouzi/helm:v3.0.0-beta.5
            command:
              - make
            args:
              - package 
              - VERSION=0.0.0
    - name: test-prow-helm-chart-semrelease-dryrun
      context: test-prow-helm-chart-semrelease-dryrun
      decorate: true
      clone_uri: "git@github.com:ouzi-dev/prow-helm-chart.git" 
      always_run: true 
      skip_report: false 
      max_concurrency: 1 
      labels:
        preset-semantic-release: "true"            
      trigger: "(?m)semrelease-dryrun( please)?" 
      rerun_command: "semrelease-dryrun"
      spec: 
        containers:
          - name: "test-prow-helm-chart-semrelease-dryrun"
            imagePullPolicy: IfNotPresent
            image: quay.io/ouzi/toolbox:0.1.16
            command:
              - make
            args:
              - semantic-release-dry-run 
postsubmits:
  ouzi-dev/prow-helm-chart:
    - name: release-prow-helm-chart
      decorate: true
      clone_uri: "git@github.com:ouzi-dev/prow-helm-chart.git" 
      max_concurrency: 1 
      labels:
        preset-semantic-release: "true"
      branches:
        - master
      spec: 
        containers:
          - name: "release-prow-helm-chart"
            imagePullPolicy: IfNotPresent
            image: quay.io/ouzi/toolbox:0.1.16
            command:
              - make
            args:
              - semantic-release
