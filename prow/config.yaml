prowjob_namespace: prow
pod_namespace: prow-test-pods

plank:
  allow_cancellations: true
  job_url_prefix: 'https://prow.unicorn.ouzi.io/view/gcs'
  job_url_template: 'https://prow.unicorn.ouzi.io/view/gcs/unicorn-prow-artifacts/pr-logs/pull/{{.Spec.Refs.Repo}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}'
  report_template: '[Full PR test history](https://prow.unicorn.ouzi.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})'
  pod_pending_timeout: 60m
  default_decoration_config:
    timeout: 2h
    grace_period: 15s
    utility_images:
      clonerefs: "gcr.io/k8s-prow/clonerefs:v20190517-95ef25d87"
      initupload: "gcr.io/k8s-prow/initupload:v20190517-95ef25d87"
      entrypoint: "gcr.io/k8s-prow/entrypoint:v20190517-95ef25d87"
      sidecar: "gcr.io/k8s-prow/sidecar:v20190517-95ef25d87"
    gcs_configuration:
      bucket: "unicorn-prow-artifacts"
      path_strategy: "explicit"
    gcs_credentials_secret: gcs-credentials

deck:
  spyglass:
    size_limit: 500000000 # 500MB
    viewers:
      "started.json|finished.json":
      - "metadata"
      "build-log.txt":
      - "buildlog"
      "artifacts/junit.*\\.xml":
      - "junit"
  tide_update_period: 1s

sinker:
  resync_period: 1m
  max_prowjob_age: 48h
  max_pod_age: 30m

push_gateway:
  endpoint: pushgateway
  serve_metrics: true

tide:
  sync_period: 1m
  merge_method:
    ouzi-dev: squash
  pr_status_base_url: https://prow.unicorn.ouzi.io/pr
  blocker_label: tide/merge-blocker
  squash_label: tide/merge-method-squash
  rebase_label: tide/merge-method-rebase
  merge_label: tide/merge-method-merge
  context_options:
    # Use branch protection options to define required and optional contexts
    from-branch-protection: true
    # Treat unknown contexts as optional
    skip-unknown-contexts: false
  queries:
  - orgs:
    - ouzi-dev
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge
    - do-not-merge/hold
    - do-not-merge/work-in-progress
    - needs-rebase
    - do-not-merge/invalid-owners-file

github_reporter:
  job_types_to_report:
  - presubmit
  - postsubmit

presets:
# credential presets
- labels:
    preset-github-ouzidev: "true"
  volumes:
  - name: github-bot-ssh-key
    secret:
      secretName: github_bot_ssh_key
  volumeMounts:
  - name: github-bot-ssh-key
    mountPath: /home/.ssh/id_rsa
    readOnly: true
- labels:
    preset-terraform: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/google-service-account/service-account.json
  # storage e2e tests borrow this as a preconfigured key instead of creating and
  # injecting a new key. this allows us to avoid mass key download warnings
  - name: E2E_GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/google-service-account/service-account.json
  - name: AWS_ACCESS_KEY_ID
    valueFrom:
      secretKeyRef:
        name: terraform-ouzidev-aws-service-account
        key: access_key_id
  - name: AWS_SECRET_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: terraform-ouzidev-aws-service-account
        key: secret_access_key
  volumes:
  - name: google-service-account
    secret:
      secretName: terraform-ouzidev-google-service-account
  volumeMounts:
  - name: google-service-account
    mountPath: /etc/google-service-account
    readOnly: true